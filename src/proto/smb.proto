syntax = "proto3";

package smb;

message HealthCheckRequest { string service = 1; }

message HealthCheckResponse {
  enum ServingStatus {
    UNKNOWN = 0;
    SERVING = 1;
    NOT_SERVING = 2;
  }
  ServingStatus status = 1;
}

service Health { rpc Check(HealthCheckRequest) returns (HealthCheckResponse); }

message LoginInput {
  string domain = 1;
  string username = 2;
  string password = 3;
  string share = 4;
}

message WriteFile {
  string path = 1;
  bytes file = 2;
}

message WriteFileStream {
  optional string path = 1;
  optional bytes file = 2;
}

message PathInput { string path = 1; }
message MkdirInput {
  string path = 1;
  optional int32 mode = 2;
}
message ReadDirInput {
  string path = 1;
  optional string encoding = 2;
}

message ResultBool { bool result = 1; }
message ResultString { string result = 1; }
message ResultArrayString { repeated string result = 1; }
message ResultFile { bytes result = 1; }
service SmbService {
  rpc login(LoginInput) returns (ResultString) {}
  rpc exists(PathInput) returns (ResultBool) {}
  rpc mkdir(MkdirInput) returns (ResultBool) {}
  rpc readFile(PathInput) returns (stream ResultFile) {}
  rpc writeFileStream(stream WriteFileStream) returns (stream ResultBool) {}
  rpc writeFile(WriteFile) returns (ResultBool) {}
  rpc unlink(PathInput) returns (ResultBool) {}
  rpc rmdir(PathInput) returns (ResultBool) {}
  rpc readdir(ReadDirInput) returns (ResultArrayString) {}
}